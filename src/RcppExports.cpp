// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// cpprbinom
NumericVector cpprbinom(int n, double size, NumericVector prob);
RcppExport SEXP _episensr_cpprbinom(SEXP nSEXP, SEXP sizeSEXP, SEXP probSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< double >::type size(sizeSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type prob(probSEXP);
    rcpp_result_gen = Rcpp::wrap(cpprbinom(n, size, prob));
    return rcpp_result_gen;
END_RCPP
}
// define_e
List define_e(int iter, String measure, NumericMatrix obs_mat, NumericMatrix draws, Rcpp::CharacterVector formatSEXP);
RcppExport SEXP _episensr_define_e(SEXP iterSEXP, SEXP measureSEXP, SEXP obs_matSEXP, SEXP drawsSEXP, SEXP formatSEXPSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type iter(iterSEXP);
    Rcpp::traits::input_parameter< String >::type measure(measureSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type obs_mat(obs_matSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type draws(drawsSEXP);
    Rcpp::traits::input_parameter< Rcpp::CharacterVector >::type formatSEXP(formatSEXPSEXP);
    rcpp_result_gen = Rcpp::wrap(define_e(iter, measure, obs_mat, draws, formatSEXP));
    return rcpp_result_gen;
END_RCPP
}
// calc_toterr
NumericMatrix calc_toterr(int iter, String measure, NumericMatrix obs_mat, IntegerMatrix e, Rcpp::CharacterVector formatSEXP);
RcppExport SEXP _episensr_calc_toterr(SEXP iterSEXP, SEXP measureSEXP, SEXP obs_matSEXP, SEXP eSEXP, SEXP formatSEXPSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type iter(iterSEXP);
    Rcpp::traits::input_parameter< String >::type measure(measureSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type obs_mat(obs_matSEXP);
    Rcpp::traits::input_parameter< IntegerMatrix >::type e(eSEXP);
    Rcpp::traits::input_parameter< Rcpp::CharacterVector >::type formatSEXP(formatSEXPSEXP);
    rcpp_result_gen = Rcpp::wrap(calc_toterr(iter, measure, obs_mat, e, formatSEXP));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_episensr_cpprbinom", (DL_FUNC) &_episensr_cpprbinom, 3},
    {"_episensr_define_e", (DL_FUNC) &_episensr_define_e, 5},
    {"_episensr_calc_toterr", (DL_FUNC) &_episensr_calc_toterr, 5},
    {NULL, NULL, 0}
};

RcppExport void R_init_episensr(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
