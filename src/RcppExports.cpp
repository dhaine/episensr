// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// loop_misclass
NumericVector loop_misclass(int reps, int n, CharacterVector measure, NumericVector e_obs, NumericVector d, NumericVector ppvca, NumericVector ppvexp, NumericVector npvca, NumericVector npvexp, NumericVector ppv_d1, NumericVector ppv_d0, NumericVector npv_d1, NumericVector npv_d0, NumericVector outcome, bool display_progress);
RcppExport SEXP _episensr_loop_misclass(SEXP repsSEXP, SEXP nSEXP, SEXP measureSEXP, SEXP e_obsSEXP, SEXP dSEXP, SEXP ppvcaSEXP, SEXP ppvexpSEXP, SEXP npvcaSEXP, SEXP npvexpSEXP, SEXP ppv_d1SEXP, SEXP ppv_d0SEXP, SEXP npv_d1SEXP, SEXP npv_d0SEXP, SEXP outcomeSEXP, SEXP display_progressSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type reps(repsSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< CharacterVector >::type measure(measureSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type e_obs(e_obsSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type d(dSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type ppvca(ppvcaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type ppvexp(ppvexpSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type npvca(npvcaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type npvexp(npvexpSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type ppv_d1(ppv_d1SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type ppv_d0(ppv_d0SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type npv_d1(npv_d1SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type npv_d0(npv_d0SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type outcome(outcomeSEXP);
    Rcpp::traits::input_parameter< bool >::type display_progress(display_progressSEXP);
    rcpp_result_gen = Rcpp::wrap(loop_misclass(reps, n, measure, e_obs, d, ppvca, ppvexp, npvca, npvexp, ppv_d1, ppv_d0, npv_d1, npv_d0, outcome, display_progress));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_episensr_loop_misclass", (DL_FUNC) &_episensr_loop_misclass, 15},
    {NULL, NULL, 0}
};

RcppExport void R_init_episensr(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
